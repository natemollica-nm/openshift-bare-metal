- name:  Prepare Various Images required for Installation
  hosts: localhost
  vars_files:
    - variables.yaml
    - vault-variables.yaml
    - bm-ansible-nodes.json
  tasks:
    - name: Add all hypervisor group-host
      add_host:
        name: "{{ item.hypervisor_name }}"
        ansible_ssh_user: "{{ item.hypervisor_user }}"
        ansible_ssh_private_key_file: "{{ item.hypervisor_ssh_key }}"
        groups:
          - hypervisor_host
      with_items: "{{ utility_nodes }}"
      when: item.hypervisor_name != "localhost"

- name:  Build controller hosts
  hosts:
    - localhost
    - hypervisor_host
  vars_files:
    - variables.yaml
    - vault-variables.yaml
    - bm-ansible-nodes.json
  tasks:
    - name: Copy RHEL-9 image
      copy:
        remote_src: True
        src: "{{ image_location }}"
        dest: "{{ item.hypervisor_image_dir }}/{{ supported_os }}.qcow2"
        mode: '0660'
        owner: root
        group: root
      delegate_to: "{{ item.hypervisor_name }}"
      run_once: True
      when:
        - image_get_url.failed is defined
      with_items: "{{ utility_nodes }}"

    - name: Create a new Blank Image
      shell: |
        qemu-img create -f qcow2  {{ item.hypervisor_image_dir }}/{{ supported_os }}-100G.qcow2 {{ utility.disk }}
      delegate_to: "{{ item.hypervisor_name }}"
      run_once: True
      with_items: "{{ utility_nodes }}"

    - name: Resizing the filesystem
      shell: |
        virt-resize --format qcow2 --expand /dev/sda3 {{ item.hypervisor_image_dir }}/{{ supported_os }}.qcow2 {{ item.hypervisor_image_dir }}/{{ supported_os }}-100G.qcow2
      environment:
        LIBGUESTFS_BACKEND: "direct"
      delegate_to: "{{ item.hypervisor_name }}"
      run_once: True
      with_items: "{{ utility_nodes }}"
      when: ansible_os_family == "RedHat"
  
    - name: Copy ssh_pub to temp dir
      copy:
        src: "{{ ssh_pub }}"
        dest: "/tmp/id_rsa.pub"
  
    - name: Customizing the image to set root password, push ssh key and remove cloud-init
      shell: |
        virt-customize -a {{ item.hypervisor_image_dir }}/{{ supported_os }}-100G.qcow2 --root-password password:"{{ secure_password }}" --ssh-inject "root:file:/tmp/id_rsa.pub" --selinux-relabel --run-command 'yum remove cloud-init* -y'
      environment:
        LIBGUESTFS_BACKEND: "direct"
      delegate_to: "{{ item.hypervisor_name }}"
      run_once: True
      with_items: "{{ utility_nodes }}"
      when: ansible_os_family == "RedHat"

- name:  Prepare utility host Golden Image
  hosts:
    - localhost
    - hypervisor_host
  vars_files:
    - variables.yaml
    - vault-variables.yaml
    - bm-ansible-nodes.json
  vars:
    uuid: "{{ 1000 | random | to_uuid | upper }}"
  tasks:
    - name: Copy Base Image to create utility host image
      copy:
        src: "{{ item.hypervisor_image_dir }}/{{ supported_os }}-100G.qcow2"
        dest: "{{ item.hypervisor_image_dir }}/{{ supported_os }}-utility.qcow2"
        remote_src: True
      delegate_to: "{{ item.hypervisor_name }}"
      run_once: True
      with_items: "{{ utility_nodes }}"
    - name: Create /tmp/{{ ansible_default_ipv4.interface }} for RHEL9 - redfish
      copy:
        dest: /tmp/{{ ansible_default_ipv4.interface }}.nmconnection
        mode: '0644'
        content: |
          [connection]
          id={{ ansible_default_ipv4.interface }}
          uuid={{ uuid }}
          type=ethernet
          interface-name={{ ansible_default_ipv4.interface }}
          autoconnect=true

          [ipv4]
          method=manual
          addresses={{ utility_nodes[0].baremetal_ip }}/{{ baremetal_net.prefix }}
          gateway={{ baremetal_net.gateway }}
          dns={{ utility_nodes[0].baremetal_ip }}
          dns-search=

          [ipv6]
          method=ignore
      delegate_to: "{{ item.hypervisor_name }}"
      run_once: True
      with_items: "{{ utility_nodes }}"
      when:
        - redfish.enable|bool

    - name: Copying Config files to the rhel9 bastion image - redfish
      shell: |
        virt-copy-in -a {{ item.hypervisor_image_dir }}/{{ supported_os }}-bastion.qcow2 /tmp/{{ ansible_default_ipv4.interface }}.nmconnection /etc/NetworkManager/system-connections/
      environment:
        LIBGUESTFS_BACKEND: "direct"
      delegate_to: "{{ item.hypervisor_name }}"
      run_once: True
      with_items: "{{ utility_nodes }}"
      when:
        - ansible_os_family == "RedHat"
        - redfish.enable|bool

    - name: Ensuring correct permissions for network configuration files - redfish
      shell: |
        chmod 600 /etc/NetworkManager/system-connections/{{ ansible_default_ipv4.interface }}.nmconnection
      delegate_to: "{{ item.hypervisor_name }}"
      run_once: True
      with_items: "{{ utility_nodes }}"
      when:
        - ansible_os_family == "RedHat"
        - redfish.enable|bool

    - name: Restart NetworkManager to apply the new connection - redfish
      shell: |
        systemctl restart NetworkManager
      delegate_to: "{{ item.hypervisor_name }}"
      run_once: True
      with_items: "{{ utility_nodes }}"
      when:
        - ansible_os_family == "RedHat"
        - redfish.enable|bool